Using username "student-02-8e1a3be6ac3e".
Authenticating with public key "imported-openssh-key"
Linux linux-instance 4.9.0-12-amd64 #1 SMP Debian 4.9.210-1+deb9u1 (2020-06-07) x86_64

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
student-02-8e1a3be6ac3e@linux-instance:~$ git clone https://github.com/techcircule/it-cert-automation-practice.git
Cloning into 'it-cert-automation-practice'...
remote: Enumerating objects: 25, done.
remote: Total 25 (delta 0), reused 0 (delta 0), pack-reused 25
Unpacking objects: 100% (25/25), done.
student-02-8e1a3be6ac3e@linux-instance:~$ cd ~/it-cert-automation-practice
student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice$ git remote -v
origin  https://github.com/techcircule/it-cert-automation-practice.git (fetch)
origin  https://github.com/techcircule/it-cert-automation-practice.git (push)
student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice$ git remote add upstream https://github.com/[git-username]/it-cert-automation-practice.git
student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice$ git remote add upstream https://github.com/Vidya Rautela/it-cert-automation-practice.git
usage: git remote add [<options>] <name> <url>

    -f, --fetch           fetch the remote branches
    --tags                import all tags and associated objects when fetching
                          or do not fetch any tag at all (--no-tags)
    -t, --track <branch>  branch(es) to track
    -m, --master <branch>
                          master branch
    --mirror[=<push|fetch>]
                          set up remote as a mirror to push to or fetch from

student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice$ git remote -v
origin  https://github.com/techcircule/it-cert-automation-practice.git (fetch)
origin  https://github.com/techcircule/it-cert-automation-practice.git (push)
upstream        https://github.com/[git-username]/it-cert-automation-practice.git (fetch)
upstream        https://github.com/[git-username]/it-cert-automation-practice.git (push)
student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice$
student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice$ git config --global user.name "Name"
student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice$ git config --global user.name Vidya Rautela
student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice$
student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice$ git config --global user.email "user@example.com"
student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice$ git config --global user.email vidya.rautela.28@gmail.com
student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice$ git branch improve-username-behavior
student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice$ git checkout improve-username-behavior
Switched to branch 'improve-username-behavior'
student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice$ cd ~/it-cert-automation-practice/Course3/Lab4
student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice/Course3/Lab4$ ls
validations.py
student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice/Course3/Lab4$ cat validations.py
#!/usr/bin/env python3

import re

def validate_user(username, minlen):
    """Checks if the received username matches the required conditions."""
    if type(username) != str:
        raise TypeError("username must be a string")
    if minlen < 1:
        raise ValueError("minlen must be at least 1")

    # Usernames can't be shorter than minlen
    if len(username) < minlen:
        return False
    # Usernames can only use letters, numbers, dots and underscores
    if not re.match('^[a-z0-9._]*$', username):
        return False
    # Usernames can't begin with a number
    if username[0].isnumeric():
        return False
    return True



student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice/Course3/Lab4$ nano validations.py
student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice/Course3/Lab4$ python3 validations.py
True
True
True
True
student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice/Course3/Lab4$ nano validations.py
student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice/Course3/Lab4$ python3 validations.py
False
False
False
False
student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice/Course3/Lab4$ nano validations.py
student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice/Course3/Lab4$ python3 validations.py
False
False
False
False
student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice/Course3/Lab4$ git status
On branch improve-username-behavior
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   validations.py

no changes added to commit (use "git add" and/or "git commit -a")
student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice/Course3/Lab4$ git add validations.py
student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice/Course3/Lab4$ git status
On branch improve-username-behavior
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   validations.py

student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice/Course3/Lab4$ git commit
[improve-username-behavior 9dcffb1] Closes: #1 Updated validations.py python script. Fixed the behavior of validate_user function in validations.py.
 1 file changed, 6 insertions(+), 1 deletion(-)
student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice/Course3/Lab4$ git push origin improve-username-behavior
Username for 'https://github.com': techcircule
Password for 'https://techcircule@github.com':
Counting objects: 5, done.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (5/5), 561 bytes | 0 bytes/s, done.
Total 5 (delta 2), reused 0 (delta 0)
remote: Resolving deltas: 100% (2/2), completed with 2 local objects.
remote:
remote: Create a pull request for 'improve-username-behavior' on GitHub by visiting:
remote:      https://github.com/techcircule/it-cert-automation-practice/pull/new/improve-username-behavior
remote:
To https://github.com/techcircule/it-cert-automation-practice.git
 * [new branch]      improve-username-behavior -> improve-username-behavior
student-02-8e1a3be6ac3e@linux-instance:~/it-cert-automation-practice/Course3/Lab4$
